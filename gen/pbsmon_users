#!/usr/bin/perl
use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;
use Perun::Agent;
use JSON::XS;
use Tie::IxHash;

#forward declaration
sub processGroupData;

our $SERVICE_NAME = "pbsmon_users";
our $PROTOCOL_VERSION = "3.0.1";
my $SCRIPT_VERSION = "3.0.1";

perunServicesInit::init;
my $DIRECTORY = perunServicesInit::getDirectory;
my $data = perunServicesInit::getDataWithGroups;

#Constants
our $A_USER_NAME;           *A_USER_NAME =           \'urn:perun:user:attribute-def:core:displayName';
our $A_USER_ORG;            *A_USER_ORG =            \'urn:perun:user:attribute-def:def:organization';
our $A_USER_LOGIN;          *A_USER_LOGIN =          \'urn:perun:user_facility:attribute-def:virt:login';
our $A_USER_PUBLICATIONS;   *A_USER_PUBLICATIONS =   \'urn:perun:user:attribute-def:def:publications';
our $A_USER_STATUS;         *A_USER_STATUS =         \'urn:perun:member:attribute-def:core:status';
our $A_USER_EXPIRES;        *A_USER_EXPIRES =        \'urn:perun:member:attribute-def:def:membershipExpiration';
our $A_GROUP_NAME;          *A_GROUP_NAME =          \'urn:perun:group:attribute-def:core:name';
our $A_GROUP_STATISTIC;     *A_GROUP_STATISTIC =     \'urn:perun:group:attribute-def:def:statisticGroup';
our $A_VO_NAME;             *A_VO_NAME =             \'urn:perun:vo:attribute-def:core:name';

my $attributesByLogin = {};

my @resourcesData = $data->getChildElements;
foreach my $rData (@resourcesData) {

	my %resourceAttrs = attributesToHash $rData->getAttributes;

	foreach my $groupData (($rData->getChildElements)[0]->getChildElements) {
		processGroupData $groupData, $resourceAttrs{$A_VO_NAME}, $attributesByLogin;
	}
}


my @users;
for my $login (sort keys %$attributesByLogin) {
	my $values = $attributesByLogin->{$login};
	push @users, \%$values;
}

my $struc = {};
$struc->{"users"} = \@users;

my $fileName = "$DIRECTORY/$SERVICE_NAME";
open FILE,">$fileName" or die "Cannot open $fileName: $! \n";
print FILE JSON::XS->new->utf8->pretty->canonical->encode($struc);
close FILE;

perunServicesInit::finalize;

############
### SUBS ###
############

sub processGroupData {
	my ($groupData, $voName, $attributesByLogin) = @_;

	my $subGroupsElement = ($groupData->getChildElements)[0];
	my $membersElement = ($groupData->getChildElements)[1];
	my %groupAttributes = attributesToHash $groupData->getAttributes;

	for my $memberData ($membersElement->getChildElements) {
		my %memberAttributes = attributesToHash $memberData->getAttributes;
		
		unless($attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}) {
			$attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{"logname"} = $memberAttributes{$A_USER_LOGIN};
			$attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{"name"} = $memberAttributes{$A_USER_NAME};
			$attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{"org"} = $memberAttributes{$A_USER_ORG};
			$attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{"publications"} = $memberAttributes{$A_USER_PUBLICATIONS};
		}

		unless($attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{'vos'}->{$voName}) {
			$attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{'vos'}->{$voName}->{"expires"} = $memberAttributes{$A_USER_EXPIRES};
			$attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{'vos'}->{$voName}->{"status"} = $memberAttributes{$A_USER_STATUS};
		}

		#membership in groups
		unless($attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{'vos'}->{$voName}->{"groups"}) {
			my @groups = ( $groupAttributes{$A_GROUP_NAME} );
			$attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{'vos'}->{$voName}->{"groups"} = \@groups;
		} else {
			my @groups = uniqList( @{$attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{'vos'}->{$voName}->{"groups"}}, $groupAttributes{$A_GROUP_NAME} );
			$attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{'vos'}->{$voName}->{"groups"} = \@groups;
		}

		if($groupAttributes{$A_GROUP_STATISTIC}) {
			$attributesByLogin->{$memberAttributes{$A_USER_LOGIN}}->{'vos'}->{$voName}->{"statistic_groups"}->{$groupAttributes{$A_GROUP_NAME}} = 1;
		}
	}
}
