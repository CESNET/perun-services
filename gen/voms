#!/usr/bin/perl

use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;
use Text::Unidecode;

local $::SERVICE_NAME = "voms";
local $::PROTOCOL_VERSION = "3.0.0";
my $SCRIPT_VERSION = "3.0.0";

perunServicesInit::init;
my $DIRECTORY = perunServicesInit::getDirectory;
my $data = perunServicesInit::getHierarchicalData;

#Constants
our $A_R_VO_SHORT_NAME; *A_R_VO_SHORT_NAME =   \'urn:perun:resource:attribute-def:virt:voShortName';
our $A_USER_MAIL;       *A_USER_MAIL =         \'urn:perun:user:attribute-def:def:preferredMail';
our $A_USER_CERT_DNS;   *A_USER_CERT_DNS =     \'urn:perun:user:attribute-def:virt:userCertDNs';
our $A_USER_STATUS;     *A_USER_STATUS =       \'urn:perun:member:attribute-def:core:status';

our $STATUS_VALID;      *STATUS_VALID =        \'VALID';


my $fileName = "$DIRECTORY/$::SERVICE_NAME";
open FILE,">$fileName" or die "Cannot open $fileName: $! \n";

my @membersAttributes;
my @resourcesData = $data->getChildElements;
for my $rData (@resourcesData) {
	my %resourcesAttributes = attributesToHash $rData->getAttributes;
	for my $mData ($rData->getChildElements) {
		my %mAttrs = attributesToHash $mData->getAttributes;
		$mAttrs{$A_R_VO_SHORT_NAME} = $resourcesAttributes{$A_R_VO_SHORT_NAME};
		push @membersAttributes, \%mAttrs;
	}
}

foreach my $memberAttributes (@membersAttributes) {
	next unless $memberAttributes->{$A_USER_STATUS} eq $STATUS_VALID;

	foreach my $subjectDN (keys %{$memberAttributes->{$A_USER_CERT_DNS}}) {
		chomp $memberAttributes->{$A_USER_CERT_DNS}{$subjectDN};
		#remove prefix from subjectDN
		my $subjectDNWithoutPrefix = $subjectDN;
		$subjectDNWithoutPrefix =~ s/^[0-9]+[:]//;
		print FILE $memberAttributes->{$A_R_VO_SHORT_NAME} . "\t" . $subjectDNWithoutPrefix . "\t" . $memberAttributes->{$A_USER_CERT_DNS}{$subjectDN} . "\t";
		print FILE $memberAttributes->{$A_USER_MAIL}."\n";
	}
}

close (FILE);
perunServicesInit::finalize;
