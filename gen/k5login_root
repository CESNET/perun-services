#!/usr/bin/perl

use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;
use File::Basename;

local $::SERVICE_NAME = basename($0);
local $::PROTOCOL_VERSION = "3.0.0";
my $SCRIPT_VERSION = "3.1.1";

perunServicesInit::init;
my $data = perunServicesInit::getDataWithGroups;

my $agent = perunServicesInit::getAgent;

our $A_PRINCIPAL;            *A_PRINCIPAL =           \'urn:perun:user:attribute-def:def:kerberosAdminPrincipal';
our $A_USER_STATUS;          *A_USER_STATUS =         \'urn:perun:member:attribute-def:core:status';
our $A_GROUP_DESTINATIONS;   *A_GROUP_DESTINATIONS =  \'urn:perun:group:attribute-def:def:listOfDestinations';

my $sortingFunction = getAttributeSorting($A_PRINCIPAL, 1);
my %outputByDestination = ('all' => undef);

my @resourcesData = $data->getChildElements;
foreach my $resourceData (@resourcesData) {

	foreach my $groupData (($resourceData->getChildElements)[0]->getChildElements) {
		my %groupAttributes = attributesToHash $groupData->getAttributes;
		my @generatedDataDestination = ('all');
		if(defined $groupAttributes{$A_GROUP_DESTINATIONS}) { @generatedDataDestination = @{$groupAttributes{$A_GROUP_DESTINATIONS}}; }

		foreach my $memberData (($groupData->getChildElements)[1]->getChildElements) {
			my %memberAttributes = attributesToHash $memberData->getAttributes;
			next if $memberAttributes{$A_USER_STATUS} ne 'VALID';
			push @{$outputByDestination{$_}}, $memberAttributes{$A_PRINCIPAL} foreach @generatedDataDestination;
		}

	}
}


####### output ######################
{
	local $, = "\n";
	local $\ = "\n";

	for my $destination (keys %outputByDestination) {
		my $destinationDirectory = getDestinationDirectory $destination; 
		my $service_file_name = "$destinationDirectory/$::SERVICE_NAME";
		open SERVICE_FILE,">$service_file_name" or die "Cannot open $service_file_name: $! \n";
		print SERVICE_FILE sort &uniqList(@{$outputByDestination{$destination}}, @{$outputByDestination{"all"}});
		close(SERVICE_FILE);
	}
}

perunServicesInit::finalize;
