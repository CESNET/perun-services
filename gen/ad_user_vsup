#!/usr/bin/perl
use feature "switch";
use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;

local $::SERVICE_NAME = "ad_user_vsup";
local $::PROTOCOL_VERSION = "3.0.1";
my $SCRIPT_VERSION = "3.0.2";

perunServicesInit::init;
my $DIRECTORY = perunServicesInit::getDirectory;
my $fileName = "$DIRECTORY/$::SERVICE_NAME".".ldif";
my $baseDnFileName = "$DIRECTORY/baseDN";
my $topDnFileName = "$DIRECTORY/topDN";

my $data = perunServicesInit::getFlatData;

#Constants
our $A_F_BASE_DN;  *A_F_BASE_DN = \'urn:perun:facility:attribute-def:def:adBaseDN';
our $A_F_DOMAIN;  *A_F_DOMAIN = \'urn:perun:facility:attribute-def:def:adDomain';
our $A_F_UAC;  *A_F_UAC = \'urn:perun:facility:attribute-def:def:adUAC';
our $A_FIRST_NAME;  *A_FIRST_NAME = \'urn:perun:user:attribute-def:core:firstName';
our $A_LAST_NAME;  *A_LAST_NAME = \'urn:perun:user:attribute-def:core:lastName';
our $A_ARTISTIC_FIRST_NAME; *A_ARTISTIC_FIRST_NAME = \'urn:perun:user:attribute-def:def:artisticFirstName';
our $A_ARTISTIC_LAST_NAME; *A_ARTISTIC_LAST_NAME = \'urn:perun:user:attribute-def:def:artisticLastName';
our $A_LOGIN; *A_LOGIN = \'urn:perun:user_facility:attribute-def:virt:login';
our $A_BLACKLISTED;  *A_BLACKLISTED = \'urn:perun:user_facility:attribute-def:virt:blacklisted';
our $A_IS_SERVICE; *A_IS_SERVICE = \'urn:perun:user:attribute-def:core:serviceUser';
our $A_UCO; *A_UCO= \'urn:perun:user:attribute-def:def:ucoVsup';
our $A_TITLE_BEFORE;  *A_TITLE_BEFORE = \'urn:perun:user:attribute-def:core:titleBefore';
our $A_TITLE_AFTER;  *A_TITLE_AFTER = \'urn:perun:user:attribute-def:core:titleAfter';
our $A_PHONE;  *A_PHONE = \'urn:perun:user:attribute-def:def:phoneDc2';
our $A_CARD_BARCODES;  *A_CARD_BARCODES = \'urn:perun:user:attribute-def:def:cardBarCodes';
our $A_CARD_CHIP_NUMBERS;  *A_CARD_CHIP_NUMBERS = \'urn:perun:user:attribute-def:def:cardCodes';

# CHECK ON FACILITY ATTRIBUTES
my %facilityAttributes = attributesToHash $data->getAttributes;
if (!defined($facilityAttributes{$A_F_BASE_DN})) {
	exit 1;
}
if (!defined($facilityAttributes{$A_F_DOMAIN})) {
	exit 1;
}
if (!defined($facilityAttributes{$A_F_UAC})) {
	exit 1;
}

my $baseDN = $facilityAttributes{$A_F_BASE_DN};
my $domain = $facilityAttributes{$A_F_DOMAIN};
my $uac = $facilityAttributes{$A_F_UAC};

# GATHER USERS
my $users;  # $users->{$login}->{ATTR} = $attrValue;

#
# PRINT BASE_DN FILE
#
open FILE,">:encoding(UTF-8)","$baseDnFileName" or die "Cannot open $baseDnFileName: $! \n";
print FILE $baseDN;
close(FILE);

#
# PRINT TOP_DN FILE
#
open FILE,">:encoding(UTF-8)","$topDnFileName" or die "Cannot open $topDnFileName: $! \n";
$baseDN =~ m/(dc=(.*))/;
print FILE $1;
close(FILE);

#
# AGGREGATE DATA
#
# FOR EACH USER
foreach my $user (($data->getChildElements)[1]->getChildElements) {

	my %uAttributes = attributesToHash $user->getAttributes;

	if (defined $uAttributes{$A_BLACKLISTED} and ($uAttributes{$A_BLACKLISTED} == 1)) {
		# skip blacklisted users !security ban!
		next;
	}

	# Print only standard user accounts
	unless (defined $uAttributes{$A_IS_SERVICE} and ($uAttributes{$A_IS_SERVICE} == 1)) {

		my $login = $uAttributes{$A_LOGIN};

		$users->{$login}->{"DN"} = "CN=".$uAttributes{$A_LOGIN}.",".$baseDN;
		# store standard attrs
		$users->{$login}->{$A_FIRST_NAME} = $uAttributes{$A_ARTISTIC_FIRST_NAME} || $uAttributes{$A_FIRST_NAME};
		$users->{$login}->{$A_LAST_NAME} = $uAttributes{$A_ARTISTIC_LAST_NAME} || $uAttributes{$A_LAST_NAME};
		$users->{$login}->{$A_UCO} = $uAttributes{$A_UCO};
		$users->{$login}->{$A_TITLE_BEFORE} = $uAttributes{$A_TITLE_BEFORE};
		$users->{$login}->{$A_TITLE_AFTER} = $uAttributes{$A_TITLE_AFTER};
		$users->{$login}->{$A_PHONE} = $uAttributes{$A_PHONE};
		$users->{$login}->{$A_CARD_BARCODES} = $uAttributes{$A_CARD_BARCODES};
		$users->{$login}->{$A_CARD_CHIP_NUMBERS} = $uAttributes{$A_CARD_CHIP_NUMBERS};

	}

}

#
# PRINT user data LDIF
#
open FILE,">$fileName" or die "Cannot open $fileName: $! \n";
binmode FILE, ":utf8";

# FOR EACH USER ON FACILITY
my @logins = sort keys %{$users};
for my $login (@logins) {

	# print attributes, which are never empty
	print FILE "dn: " . $users->{$login}->{"DN"} . "\n";

	print FILE "cn: " . $login . "\n";
	print FILE "samAccountName: " . $login . "\n";
	print FILE "userPrincipalName: " . $login . "\@" . $domain . "\n";
	# enable accounts (if not) using service propagation
	print FILE "userAccountControl: " . $uac . "\n";

	# skip attributes which are empty and LDAP can't handle it (FIRST_NAME,...)
	my $sn = $users->{$login}->{$A_LAST_NAME};
	my $givenName = $users->{$login}->{$A_FIRST_NAME};
	my $uco = $users->{$login}->{$A_UCO};
	my $titleBefore = $users->{$login}->{$A_TITLE_BEFORE};
	my $titleAfter = $users->{$login}->{$A_TITLE_AFTER};
	my $phone = $users->{$login}->{$A_PHONE};
	my $barcodes = $users->{$login}->{$A_CARD_BARCODES};
	my $chipNumers = $users->{$login}->{$A_CARD_CHIP_NUMBERS};

	# print display name from firstName/lastName only
	my $printedDisplayName = undef;
	if (defined $givenName and length $givenName and defined $sn and length $sn) {
		$printedDisplayName = $givenName . " " . $sn;
	} elsif (defined $givenName and length $givenName and !(defined $sn and length $sn)) {
		$printedDisplayName = $givenName;
	} elsif (!(defined $givenName and length $givenName) and defined $sn and length $sn) {
		$printedDisplayName = $sn;
	}
	if (defined $printedDisplayName and length $printedDisplayName) {
		print FILE "displayName: " . $printedDisplayName . "\n";
	}

	if (defined $sn and length $sn) {
		print FILE "sn: " . $sn . "\n";
	}
	if (defined $givenName and length $givenName) {
		print FILE "givenName: " . $givenName . "\n";
	}

	print FILE "mail: " . $login . "\@" . $domain . "\n";

	if (defined $uco and length $uco) {
		print FILE "vsupPersonPersonalId: " . $uco . "\n";
	}

	if (defined $titleBefore and length $titleBefore) {
		print FILE "vsupPersonTitleHead: " . $titleBefore . "\n";
	}

	if (defined $titleAfter and length $titleAfter) {
		print FILE "vsupPersonTitleTail: " . $titleAfter . "\n";
	}

	if (defined $phone and length $phone) {
		print FILE "telephoneNumber: " . $phone . "\n";
	}

	foreach my $val (@$barcodes) {
		print FILE "vsupPersonIdCardBarcode: " . $val . "\n";
	}

	foreach my $val (@$chipNumers) {
		print FILE "vsupPersonIdCardChipNumber: " . $val . "\n";
	}

	# print classes
	print FILE "objectclass: top\n";
	print FILE "objectclass: person\n";
	print FILE "objectclass: user\n";
	print FILE "objectclass: organizationalPerson\n";

	# There MUST be an empty line after each entry, so entry sorting and diff works on slave part
	print FILE "\n";

}

close(FILE);

perunServicesInit::finalize;
