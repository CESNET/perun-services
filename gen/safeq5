#!/usr/bin/perl

use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;
use open qw/:std :utf8/;

local $::SERVICE_NAME = "safeq5";
local $::PROTOCOL_VERSION = "3.0.0";
my $SCRIPT_VERSION = "3.0.1";

perunServicesInit::init;
my $DIRECTORY = perunServicesInit::getDirectory;
my $data = perunServicesInit::getHashedHierarchicalData;

#Constants
our $A_USER_LOGIN;         *A_USER_LOGIN =        \'urn:perun:user:attribute-def:def:login-namespace:mu';
our $A_USER_FIRST_NAME;    *A_USER_FIRST_NAME =   \'urn:perun:user:attribute-def:core:firstName';
our $A_USER_LAST_NAME;     *A_USER_LAST_NAME =    \'urn:perun:user:attribute-def:core:lastName';
our $A_USER_MAIL;          *A_USER_MAIL =         \'urn:perun:user:attribute-def:def:preferredMail';
our $A_USER_CHIP_NUM;      *A_USER_CHIP_NUM =     \'urn:perun:user:attribute-def:def:chipNumbers';
our $A_USER_WORKPLACE;     *A_USER_WORKPLACE =    \'urn:perun:user:attribute-def:def:workplace';
our $A_USER_WORKPLACE_ID;  *A_USER_WORKPLACE_ID = \'urn:perun:user:attribute-def:def:workplaceId';

my $fileCenters = $DIRECTORY . "centers.csv";
my $fileUsers = $DIRECTORY . "users.csv";
my %workplaceById;
my %usersByLogin;

foreach my $memberId ($data->getMemberIdsForFacility()) {
	my $login = $data->getUserAttributeValue(attrName => $A_USER_LOGIN, member => $memberId);
	unless (defined $usersByLogin{$login}) {
		$usersByLogin{$login}->{$A_USER_FIRST_NAME} = $data->getUserAttributeValue(attrName => $A_USER_FIRST_NAME, member => $memberId);
		$usersByLogin{$login}->{$A_USER_LAST_NAME} = $data->getUserAttributeValue(attrName => $A_USER_LAST_NAME, member => $memberId);
		$usersByLogin{$login}->{$A_USER_MAIL} = $data->getUserAttributeValue(attrName => $A_USER_MAIL, member => $memberId);
		$usersByLogin{$login}->{$A_USER_CHIP_NUM} = $data->getUserAttributeValue(attrName => $A_USER_CHIP_NUM, member => $memberId);
		$usersByLogin{$login}->{$A_USER_WORKPLACE_ID} = $data->getUserAttributeValue(attrName => $A_USER_WORKPLACE_ID, member => $memberId);
	}
	$workplaceById{$data->getUserAttributeValue(attrName => $A_USER_WORKPLACE_ID, member => $memberId)} = $data->getUserAttributeValue(attrName => $A_USER_WORKPLACE, member => $memberId);
}

# centers.csv:  300;add;workplaceId;workplace;
open FILE_CENTERS,">$fileCenters" or die "Cannot open $fileCenters: $! \n";
foreach my $id (sort keys %workplaceById) {
	print FILE_CENTERS "300;add;" . $id . ";" . $workplaceById{$id} . ";\n";
}
close (FILE_CENTERS) or die "Cannot close $fileCenters: $! \n";

# users.csv:  100;add;login-namespace:mu;firstName;lastName;chipNumbers;workplaceId;preferredMail;
open FILE_USERS,">$fileUsers" or die "Cannot open $fileUsers: $! \n";
foreach my $login (sort keys %usersByLogin) {
	my $attributes = $usersByLogin{$login};

	print FILE_USERS "100;add;" . $login . ";" . ($usersByLogin{$login}->{$A_USER_FIRST_NAME} || '(N/A)') . ";" . ($attributes->{$A_USER_LAST_NAME} || '(N/A)') . ";" . shift(@{$attributes->{$A_USER_CHIP_NUM}}) . ";" . $attributes->{$A_USER_WORKPLACE_ID} . ";" . $attributes->{$A_USER_MAIL} . ";\n";
}

close (FILE_USERS) or die "Cannot close $fileUsers: $! \n";
perunServicesInit::finalize;
