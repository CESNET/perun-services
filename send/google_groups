#!/usr/bin/env python3
import sys

import google_connector
import send_lib

DEBUG = 0
DRY_RUN = 0

SERVICE_NAME = "google_groups"

if __name__ == "__main__":
    if DRY_RUN:
        print("=== DRY RUN - no changes will be applied ===")
    send_lib.check_input_fields(sys.argv, True)
    facility = sys.argv[1]
    destination = sys.argv[2]
    destination_type = sys.argv[3]
    send_lib.check_destination_type_allowed(
        destination_type, send_lib.DESTINATION_TYPE_SERVICE_SPECIFIC
    )
    send_lib.check_destination_format(destination, destination_type)
    send_lib.create_lock(SERVICE_NAME, destination)

    gen_folder = send_lib.get_gen_folder(facility, SERVICE_NAME)
    domain = google_connector.parse_domain(gen_folder, SERVICE_NAME)
    config = send_lib.get_custom_config_properties(
        SERVICE_NAME,
        destination,
        ["scopes", "delegate", "service_file", "allow_delete_teamdrive"],
    )
    if not config or None in config:
        send_lib.die_with_error(
            "Configuration not found or properties missing! "
            "Expecting 'scopes', 'delegate', 'service_file' and 'allow_delete_teamdrive' fields."
        )
    scopes = config[0]
    delegate = config[1]
    service_file = config[2]
    allow_delete_teamdrive = config[3]

    connector = google_connector.GoogleConnector(
        service_file, scopes, delegate, domain, DEBUG, DRY_RUN
    )
    their_groups = connector.fetch_groups()
    our_groups = send_lib.parse_input_csv_file(
        gen_folder + "/google_groups_groups.csv", google_connector.GROUPS_COLUMN_NAMES
    )
    connector.resolve_groups(our_groups, their_groups)

    their_drives = connector.fetch_drives()
    our_drives = send_lib.parse_input_csv_file(
        gen_folder + "/google_groups_team_drives.csv",
        google_connector.DRIVES_COLUMN_NAMES,
    )
    connector.resolve_team_drives(our_drives, their_drives, allow_delete_teamdrive)

    print(
        f"Groups created: {connector.groups_created}\n"
        f"Group names updated: {connector.groups_updated}\n"
        f"Groups removed: {connector.groups_removed}\n"
        f"Groups with updated members: {connector.memberships_updated}\n"
        f"Team drives created: {connector.drives_created}\n"
        f"Team drives removed: {connector.drives_removed}\n"
        f"Team drives with updated permissions: {connector.permissions_updated}\n"
    )
