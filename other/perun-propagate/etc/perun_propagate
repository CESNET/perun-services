#!/bin/bash

### BEGIN INIT INFO
# Provides:          perun-propagate
# Required-Start:    $local_fs $remote_fs $network sshd
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $syslog
# Should-Stop:       $syslog
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Perun propagate
# Description:       Start the perun propagate process
### END INIT INFO

NAME=perun-propagate
DESC="Perun propagation"

PERUN_PROPAG_USER=perun_propag
# a script printing user's password
PERUN_PROPAG_USER_ASKPASS=/etc/perun/perun_propag.askpass
PERUN_SERVER=perun-api.e-infra.cz
PERUN_AUTHZ_TYPE=krb
PERUN_SLAVE_LOG=/var/log/syslog
#Timeout in seconds
TIMEOUT=200

LOG=/var/log/$NAME

#Log start of propagation process
echo "perun-propagation started" | ts >> $LOG

umask 077

# Include defaults if available
if [ -f /etc/default/$NAME ] ; then
	. /etc/default/$NAME
fi

# Load lsb functions
. /lib/lsb/init-functions

type log_end_msg >/dev/null 2>&1 || log_end_msg() { return "$1"; }
type log_daemon_msg >/dev/null 2>&1 || log_daemon_msg() { true; }

#---------------------------- ADDITIONAL FUNCTIONS ----------
# Return 0 if process with PID is still runing, 1 if not
is_process_running() {
	kill -0 "$1" 2>/dev/null 1>&2 && return 0 || return 1
}

# for purpose of evaluating all on_exit items
function on_exit()
{
	for i in "${on_exit_items[@]}"
	do
		eval $i
	done
}

# add new on_exit item
function add_on_exit()
{
	local n=${#on_exit_items[*]}
	on_exit_items[$n]="$*"
	if [[ $n -eq 0 ]]; then
		trap on_exit EXIT
	fi
}

#----------------------------- MAIN FUNTION -----------------

perun_propagate_start() {

	WORKDIR=`mktemp -d /tmp/perun-propagate.XXXXXXXXX` || exit 1
	cd "$WORKDIR"

	NOW_TIME=`date +%s`
	TIMEOUT=`expr $TIMEOUT + $NOW_TIME`

	tail -0f "$PERUN_SLAVE_LOG" 2>> $LOG | grep --line-buffered 'perunv3:' >slavelog & logpid=$!
	if wget --post-data='{"hostname":"'"$(hostname -f)"'"}' \
	        --header='Content-Type:application/json' -O service_list \
	        --use-askpass=$PERUN_PROPAG_USER_ASKPASS \
	        --no-verbose --timeout=60 \
	        https://$PERUN_PROPAG_USER:@$PERUN_SERVER/$PERUN_AUTHZ_TYPE/rpc/json/servicesManager/forceServicePropagationForHostname >api_err 2>&1
	then
	   for service in $(sed 's/"//g' < service_list)
	   do
	      while [ $NOW_TIME -lt "$TIMEOUT" ]
	         do
	            if grep -q "Service $service processing done" slavelog; then break;
	            else sleep 1; NOW_TIME=`expr $NOW_TIME + 1`; false; fi
	         done
	   done
	fi
	EXIT_CODE=$?
	kill $logpid
	cat api_err | ts >> $LOG
	cat slavelog | ts >> $LOG
	rm -f slavelog service_list api_err; rmdir "$WORKDIR"

	#Log end of propagation process
	echo "perun-propagation ends EXIT_CODE=$EXIT_CODE" | ts >> $LOG

	return ${EXIT_CODE}
}

#---------------------------- MAIN METHOD WITH CASE ----------

case "$1" in
	start|restart)
		log_daemon_msg "Starting $DESC" "$NAME"

		perun_propagate_start
		log_end_msg $?
		;;

	stop|force-stop|force-reload|status)
		exit 0
		;;

	*)
		echo "Usage: $0 {start|stop|force-stop|restart|force-reload|status}" >&2
		exit 2
		;;
esac
